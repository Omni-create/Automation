---
- name: Azure Infrastructure Deployment
  hosts: localhost
  connection: local
  vars:
    resource_group: KE02_groep02_RG
    location: West Europe
    virtual_network: main
    address_prefixes: "10.0.0.0/16"
    admin_username: azureuser
    ssh_key_path: "keys/azureuser.pub"

  tasks:
    # Install Nginx on front-end VM
    - name: Install Nginx on front-end VM
      azure_rm_virtualmachineextension:
        resource_group: "{{ resource_group }}"
        name: nginxInstallation
        virtual_machine_name: vm-front-end
        publisher: Microsoft.Azure.Extensions
        virtual_machine_extension_type: CustomScript
        type_handler_version: 2.0
        settings: '{"commandToExecute": "sudo apt update && sudo apt install -y nginx && sudo systemctl enable nginx && sudo systemctl start nginx"}'
        
    # Install MariaDB on back-end VM
    - name: Install MariaDB on back-end VM
      azure_rm_virtualmachineextension:
        resource_group: "{{ resource_group }}"
        name: mariadbInstallation
        virtual_machine_name: vm-back-end
        publisher: Microsoft.Azure.Extensions
        virtual_machine_extension_type: CustomScript
        type_handler_version: 2.0
        settings: '{"commandToExecute": "sudo apt update && sudo apt install -y mariadb-server && sudo systemctl enable mariadb && sudo systemctl start mariadb"}'

    # Install Prometheus on all servers
    - name: Install Prometheus on all servers
      azure_rm_virtualmachineextension:
        resource_group: "{{ resource_group }}"
        name: prometheusInstallation
        virtual_machine_name: "{{ item }}"
        publisher: Microsoft.Azure.Extensions
        virtual_machine_extension_type: CustomScript
        type_handler_version: 2.0
        settings: '{"commandToExecute": "sudo apt update && sudo apt install -y wget && wget https://github.com/prometheus/prometheus/releases/latest/download/prometheus-linux-amd64.tar.gz && tar xvf prometheus-linux-amd64.tar.gz && sudo mv prometheus-linux-amd64/prometheus /usr/local/bin/ && sudo mv prometheus-linux-amd64/promtool /usr/local/bin/ && sudo mkdir -p /etc/prometheus && sudo mv prometheus-linux-amd64/prometheus.yml /etc/prometheus/ && sudo useradd --no-create-home --shell /bin/false prometheus && sudo chown -R prometheus:prometheus /etc/prometheus && sudo tee /etc/systemd/system/prometheus.service <<EOF\n[Unit]\nDescription=Prometheus\nWants=network-online.target\nAfter=network-online.target\n\n[Service]\nUser=prometheus\nGroup=prometheus\nType=simple\nExecStart=/usr/local/bin/prometheus \\\n    --config.file /etc/prometheus/prometheus.yml \\\n    --storage.tsdb.path /var/lib/prometheus/ \\\n    --web.console.templates=/etc/prometheus/consoles \\\n    --web.console.libraries=/etc/prometheus/console_libraries\n\n[Install]\nWantedBy=multi-user.target\nEOF\n && sudo systemctl daemon-reload && sudo systemctl enable prometheus && sudo systemctl start prometheus"}'
      loop:
        - vm-front-end
        - vm-back-end
        - vm-stepping-stone

    # Install Grafana on stepping-stone VM
    - name: Install Grafana on stepping-stone VM
      azure_rm_virtualmachineextension:
        resource_group: "{{ resource_group }}"
        name: grafanaInstallation
        virtual_machine_name: vm-stepping-stone
        publisher: Microsoft.Azure.Extensions
        virtual_machine_extension_type: CustomScript
        type_handler_version: 2.0
        settings: '{"commandToExecute": "sudo apt update && sudo apt install -y apt-transport-https software-properties-common wget && wget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add - && echo \"deb https://packages.grafana.com/oss/deb stable main\" | sudo tee -a /etc/apt/sources.list.d/grafana.list && sudo apt update && sudo apt install -y grafana && sudo systemctl enable grafana-server && sudo systemctl start grafana-server"}'
